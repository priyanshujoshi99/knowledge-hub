"use strict";(self.webpackChunkprep_up=self.webpackChunkprep_up||[]).push([[3343],{8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(6540);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}},9275:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"DSA/Arrays/FAQs - Medium/LeadersInAnArray","title":"Leaders in an Array","description":"Problem","source":"@site/docs/DSA/4. Arrays/3. FAQs - Medium/LeadersInAnArray.md","sourceDirName":"DSA/4. Arrays/3. FAQs - Medium","slug":"/DSA/Arrays/FAQs - Medium/LeadersInAnArray","permalink":"/knowledge-hub/docs/DSA/Arrays/FAQs - Medium/LeadersInAnArray","draft":false,"unlisted":false,"editUrl":"https://priyanshujoshi99.github.io/knowledge-hub/docs/DSA/4. Arrays/3. FAQs - Medium/LeadersInAnArray.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Kadane\'s Algorithm","permalink":"/knowledge-hub/docs/DSA/Arrays/FAQs - Medium/KadaneAlgo"},"next":{"title":"Pascal\'s Triangle","permalink":"/knowledge-hub/docs/DSA/Arrays/FAQs - Medium/PascalsTriangle"}}');var t=r(4848),a=r(8453);const i={},l="Leaders in an Array",d={},o=[{value:"Problem",id:"problem",level:2},{value:"Examples",id:"examples",level:3},{value:"Solution",id:"solution",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"leaders-in-an-array",children:"Leaders in an Array"})}),"\n",(0,t.jsx)(n.h2,{id:"problem",children:"Problem"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Given an integer array nums, return a list of all the leaders in the array."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"A leader in an array is an element whose value is strictly greater than all elements to its right in the given array. The rightmost element is always a leader. The elements in the leader array must appear in the order they appear in the nums array."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [1, 2, 5, 3, 1, 2]\n\nOutput: [5, 3, 2]\n\nExplanation: 2 is the rightmost element, 3 is the largest element in the index range [3, 5], 5 is the largest element in the index range [2, 5]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [-3, 4, 5, 1, -4, -5]\n\nOutput: [5, 1, -4, -5]\n\nExplanation: -5 is the rightmost element, -4 is the largest element in the index range [4, 5], 1 is the largest element in the index range [3, 5] and 5 is the largest element in the range [2, 5]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"import java.util.*;\n\nclass Solution {\n  public ArrayList<Integer> leaders(int[] nums) {\n    ArrayList<Integer> ans = new ArrayList<>();\n\n    if (nums.length == 0) return ans;\n\n    int max = nums[nums.length - 1];\n    ans.add(max);\n    for (int i = nums.length - 2; i >= 0; i--) {\n      if (nums[i] > max) {\n        ans.add(nums[i]);\n        max = nums[i];\n      }\n    }\n    Collections.reverse(ans);\n    return ans;\n  }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);