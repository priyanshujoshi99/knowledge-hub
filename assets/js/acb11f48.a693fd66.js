"use strict";(self.webpackChunkprep_up=self.webpackChunkprep_up||[]).push([[1581],{5215:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"DSA/Arrays/FAQs - Medium/PascalsTriangle","title":"Pascal\'s Triangle","description":"Problem","source":"@site/docs/DSA/4. Arrays/3. FAQs - Medium/PascalsTriangle.md","sourceDirName":"DSA/4. Arrays/3. FAQs - Medium","slug":"/DSA/Arrays/FAQs - Medium/PascalsTriangle","permalink":"/knowledge-hub/docs/DSA/Arrays/FAQs - Medium/PascalsTriangle","draft":false,"unlisted":false,"editUrl":"https://priyanshujoshi99.github.io/knowledge-hub/docs/DSA/4. Arrays/3. FAQs - Medium/PascalsTriangle.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Leaders in an Array","permalink":"/knowledge-hub/docs/DSA/Arrays/FAQs - Medium/LeadersInAnArray"},"next":{"title":"Print the matrix in spiral manner","permalink":"/knowledge-hub/docs/DSA/Arrays/FAQs - Medium/PrintTheMatrixInSpiralManner"}}');var s=r(4848),t=r(8453);const l={},i="Pascal's Triangle",o={},c=[{value:"Problem",id:"problem",level:2},{value:"Examples",id:"examples",level:3},{value:"Solution",id:"solution",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"pascals-triangle",children:"Pascal's Triangle"})}),"\n",(0,s.jsx)(n.h2,{id:"problem",children:"Problem"}),"\n",(0,s.jsx)(n.p,{children:"Given an integer numRows return the first numRows rows of Pascal's triangle."}),"\n",(0,s.jsx)(n.p,{children:"In Pascal's triangle:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The first row has one element with a value of 1."}),"\n",(0,s.jsx)(n.li,{children:"Each row has one more element in it than its previous row."}),"\n",(0,s.jsx)(n.li,{children:"The value of each element is equal to the sum of the elements directly above it when arranged in a triangle format."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: numRows = 4\n\nOutput: [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\n\nExplanation: 1st Row has its value set to 1.\n\nAll other cells take their value as the sum of the values directly above them\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: numRows = 5\n\nOutput: [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n\nExplanation: 1st Row has its value set to 1.\n\nAll other cells take their value as the sum of the values directly above them\n"})}),"\n",(0,s.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"import java.util.*;\n\nclass Solution {\n    /* Function to generate a single\n    row of Pascal's Triangle*/\n    private List<Integer> generateRow(int row) {\n        long ans = 1;\n        List<Integer> ansRow = new ArrayList<>();\n        // Inserting the 1st element\n        ansRow.add(1);\n\n        // Calculate the rest of the elements\n        for (int col = 1; col < row; col++) {\n            ans = ans * (row - col);\n            ans = ans / col;\n            ansRow.add((int) ans);\n        }\n        return ansRow;\n    }\n\n    /* Function to generate Pascal's\n    Triangle up to n rows*/\n    public List<List<Integer>> pascalTriangle(int n) {\n        List<List<Integer>> pascalTriangle = new ArrayList<>();\n\n        // Store the entire Pascal's Triangle\n        for (int row = 1; row <= n; row++) {\n            pascalTriangle.add(generateRow(row));\n        }\n\n        // Return the Pascal's Triangle\n        return pascalTriangle;\n    }\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>i});var a=r(6540);const s={},t=a.createContext(s);function l(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);