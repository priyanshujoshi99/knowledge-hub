"use strict";(self.webpackChunkprep_up=self.webpackChunkprep_up||[]).push([[6795],{2819:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"JavaScript/OOP/GetterAndSetter","title":"Understanding Getters & Setters in JavaScript","description":"This code demonstrates three different ways of using getters and setters in JavaScript:","source":"@site/docs/JavaScript/10_OOP/GetterAndSetter.md","sourceDirName":"JavaScript/10_OOP","slug":"/JavaScript/OOP/GetterAndSetter","permalink":"/knowledge-hub/docs/JavaScript/OOP/GetterAndSetter","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/JavaScript/10_OOP/GetterAndSetter.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Classes and Constructor","permalink":"/knowledge-hub/docs/JavaScript/OOP/ClassConstructorAndStatic"},"next":{"title":"Inheritance in JavaScript","permalink":"/knowledge-hub/docs/JavaScript/OOP/Inheritance"}}');var t=s(4848),i=s(8453);const a={},o="Understanding Getters & Setters in JavaScript",c={},l=[{value:"<strong>\ud83d\udcdc Original Code</strong>",id:"-original-code",level:2},{value:"<strong>\ud83d\udd39 What\u2019s Happening in the Code?</strong>",id:"-whats-happening-in-the-code",level:2},{value:"<strong>1\ufe0f\u20e3 ES6 Class with Getters &amp; Setters (Modern Way)</strong>",id:"1\ufe0f\u20e3-es6-class-with-getters--setters-modern-way",level:3},{value:"<strong>2\ufe0f\u20e3 Constructor Function with <code>Object.defineProperty</code> (Legacy Way)</strong>",id:"2\ufe0f\u20e3-constructor-function-with-objectdefineproperty-legacy-way",level:3},{value:"<strong>3\ufe0f\u20e3 Object Literals with Getters &amp; Setters</strong>",id:"3\ufe0f\u20e3-object-literals-with-getters--setters",level:3},{value:"<strong>\ud83d\udccc Key Takeaways</strong>",id:"-key-takeaways",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"understanding-getters--setters-in-javascript",children:"Understanding Getters & Setters in JavaScript"})}),"\n",(0,t.jsxs)(n.p,{children:["This code demonstrates three different ways of using ",(0,t.jsx)(n.strong,{children:"getters and setters"})," in JavaScript:",(0,t.jsx)(n.br,{}),"\n","1\ufe0f\u20e3 ",(0,t.jsx)(n.strong,{children:"Modern (ES6 Class) Approach"}),(0,t.jsx)(n.br,{}),"\n","2\ufe0f\u20e3 ",(0,t.jsxs)(n.strong,{children:["Legacy (Constructor Function with ",(0,t.jsx)(n.code,{children:"Object.defineProperty"}),") Approach"]}),(0,t.jsx)(n.br,{}),"\n","3\ufe0f\u20e3 ",(0,t.jsx)(n.strong,{children:"Object Literal with Getters & Setters"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-original-code",children:(0,t.jsx)(n.strong,{children:"\ud83d\udcdc Original Code"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// Modern way\nclass User {\n  constructor(email, password) {\n    this.email = email;\n    this.password = password;\n  }\n\n  get email() {\n    return this._email.toUpperCase();\n  }\n  set email(value) {\n    this._email = value;\n  }\n\n  get password() {\n    return `${this._password}john`;\n  }\n\n  set password(value) {\n    this._password = value;\n  }\n}\n\nconst john = new User('h@john.ai', 'abc');\nconsole.log(john.email);\n\n// Legacy way\nfunction Person(email, password) {\n  this._email = email;\n  this._password = password;\n\n  Object.defineProperty(this, 'email', {\n    get: function () {\n      return this._email.toUpperCase();\n    },\n    set: function (value) {\n      this._email = value;\n    }\n  });\n  Object.defineProperty(this, 'password', {\n    get: function () {\n      return this._password.toUpperCase();\n    },\n    set: function (value) {\n      this._password = value;\n    }\n  });\n}\n\nconst chai = new Person('chai@chai.com', 'chai');\n\nconsole.log(chai.email);\n\n// Getter and setter in object\nconst Human = {\n  _email: 'h@hc.com',\n  _password: 'abc',\n\n  get email() {\n    return this._email.toUpperCase();\n  },\n\n  set email(value) {\n    this._email = value;\n  }\n};\n\nconst tea = Object.create(Human);\nconsole.log(tea.email);\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-whats-happening-in-the-code",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd39 What\u2019s Happening in the Code?"})}),"\n",(0,t.jsx)(n.h3,{id:"1\ufe0f\u20e3-es6-class-with-getters--setters-modern-way",children:(0,t.jsx)(n.strong,{children:"1\ufe0f\u20e3 ES6 Class with Getters & Setters (Modern Way)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"class User {\n  constructor(email, password) {\n    this.email = email;\n    this.password = password;\n  }\n\n  get email() {\n    return this._email.toUpperCase();\n  }\n  set email(value) {\n    this._email = value;\n  }\n\n  get password() {\n    return `${this._password}john`;\n  }\n\n  set password(value) {\n    this._password = value;\n  }\n}\n\nconst john = new User('h@john.ai', 'abc');\nconsole.log(john.email);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How it Works:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Encapsulation:"})," ",(0,t.jsx)(n.code,{children:"_email"})," and ",(0,t.jsx)(n.code,{children:"_password"})," are private-like properties (convention)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Getter (",(0,t.jsx)(n.code,{children:"get email"}),")"]})," \u2192 Returns email in uppercase."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Setter (",(0,t.jsx)(n.code,{children:"set email"}),")"]})," \u2192 Stores the value in ",(0,t.jsx)(n.code,{children:"_email"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Getter (",(0,t.jsx)(n.code,{children:"get password"}),")"]})," \u2192 Appends ",(0,t.jsx)(n.code,{children:'"john"'})," to password."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Setter (",(0,t.jsx)(n.code,{children:"set password"}),")"]})," \u2192 Stores the value in ",(0,t.jsx)(n.code,{children:"_password"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Trivia:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Getters and setters are useful for ",(0,t.jsx)(n.strong,{children:"computed properties"})," and ",(0,t.jsx)(n.strong,{children:"data validation"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_email"})," and ",(0,t.jsx)(n.code,{children:"_password"})," are used instead of ",(0,t.jsx)(n.code,{children:"email"})," and ",(0,t.jsx)(n.code,{children:"password"})," to ",(0,t.jsx)(n.strong,{children:"avoid recursive calls"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"2\ufe0f\u20e3-constructor-function-with-objectdefineproperty-legacy-way",children:(0,t.jsxs)(n.strong,{children:["2\ufe0f\u20e3 Constructor Function with ",(0,t.jsx)(n.code,{children:"Object.defineProperty"})," (Legacy Way)"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function Person(email, password) {\n  this._email = email;\n  this._password = password;\n\n  Object.defineProperty(this, 'email', {\n    get: function () {\n      return this._email.toUpperCase();\n    },\n    set: function (value) {\n      this._email = value;\n    }\n  });\n\n  Object.defineProperty(this, 'password', {\n    get: function () {\n      return this._password.toUpperCase();\n    },\n    set: function (value) {\n      this._password = value;\n    }\n  });\n}\n\nconst chai = new Person('chai@chai.com', 'chai');\nconsole.log(chai.email);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How it Works:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Instead of ",(0,t.jsx)(n.code,{children:"class"}),", ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Object.defineProperty()"})})," is used to define getters and setters."]}),"\n",(0,t.jsxs)(n.li,{children:["Similar to ES6 classes, it modifies ",(0,t.jsx)(n.code,{children:"_email"})," and ",(0,t.jsx)(n.code,{children:"_password"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Getter (",(0,t.jsx)(n.code,{children:"get email"}),")"]})," \u2192 Returns uppercase email."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Setter (",(0,t.jsx)(n.code,{children:"set email"}),")"]})," \u2192 Assigns ",(0,t.jsx)(n.code,{children:"_email"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Getter (",(0,t.jsx)(n.code,{children:"get password"}),")"]})," \u2192 Converts password to uppercase."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Trivia:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This is how getters/setters were implemented before ES6."}),"\n",(0,t.jsxs)(n.li,{children:["It allows more control over property descriptors like ",(0,t.jsx)(n.strong,{children:"writable, enumerable, configurable"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"3\ufe0f\u20e3-object-literals-with-getters--setters",children:(0,t.jsx)(n.strong,{children:"3\ufe0f\u20e3 Object Literals with Getters & Setters"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const Human = {\n  _email: 'h@hc.com',\n  _password: 'abc',\n\n  get email() {\n    return this._email.toUpperCase();\n  },\n\n  set email(value) {\n    this._email = value;\n  }\n};\n\nconst tea = Object.create(Human);\nconsole.log(tea.email);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How it Works:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Human"})," is an ",(0,t.jsx)(n.strong,{children:"object literal"})," with ",(0,t.jsx)(n.strong,{children:"getters and setters"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Object.create(Human)"})," creates a new object that ",(0,t.jsxs)(n.strong,{children:["inherits from ",(0,t.jsx)(n.code,{children:"Human"})]}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Getter (",(0,t.jsx)(n.code,{children:"get email"}),")"]})," \u2192 Returns uppercase email."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Setter (",(0,t.jsx)(n.code,{children:"set email"}),")"]})," \u2192 Modifies ",(0,t.jsx)(n.code,{children:"_email"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Trivia:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Object.create()"})," is used to create objects with ",(0,t.jsx)(n.strong,{children:"prototype-based inheritance"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Unlike ES6 classes, ",(0,t.jsx)(n.strong,{children:"there\u2019s no constructor function"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-key-takeaways",children:(0,t.jsx)(n.strong,{children:"\ud83d\udccc Key Takeaways"})}),"\n",(0,t.jsxs)(n.p,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Encapsulation:"})," ",(0,t.jsx)(n.code,{children:"_email"})," and ",(0,t.jsx)(n.code,{children:"_password"})," are used as private-like properties.",(0,t.jsx)(n.br,{}),"\n","\u2705 ",(0,t.jsx)(n.strong,{children:"Getter Methods:"})," Allow computed properties (e.g., ",(0,t.jsx)(n.code,{children:"email.toUpperCase()"}),").",(0,t.jsx)(n.br,{}),"\n","\u2705 ",(0,t.jsx)(n.strong,{children:"Setter Methods:"})," Modify internal properties and prevent accidental changes.",(0,t.jsx)(n.br,{}),"\n","\u2705 ",(0,t.jsx)(n.strong,{children:"Multiple Approaches:"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"ES6 Classes (Modern)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.strong,{children:["Constructor Functions with ",(0,t.jsx)(n.code,{children:"Object.defineProperty"})," (Legacy)"]})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Object Literals with Getters & Setters"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);