"use strict";(self.webpackChunkprep_up=self.webpackChunkprep_up||[]).push([[4611],{2429:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"DSA/Arrays/Logic Building/FindMissingNumber","title":"Find missing number","description":"Problem","source":"@site/docs/DSA/4. Arrays/2. Logic Building/FindMissingNumber.md","sourceDirName":"DSA/4. Arrays/2. Logic Building","slug":"/DSA/Arrays/Logic Building/FindMissingNumber","permalink":"/knowledge-hub/docs/DSA/Arrays/Logic Building/FindMissingNumber","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DSA/4. Arrays/2. Logic Building/FindMissingNumber.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Second Largest Element","permalink":"/knowledge-hub/docs/DSA/Arrays/Fundamentals/SecondLargestElement"},"next":{"title":"Intersection of two sorted arrays","permalink":"/knowledge-hub/docs/DSA/Arrays/Logic Building/IntersectionOfTwoSortedArrays"}}');var s=i(4848),t=i(8453);const o={},a="Find missing number",u={},l=[{value:"Problem",id:"problem",level:2},{value:"Examples",id:"examples",level:3},{value:"Solution",id:"solution",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"find-missing-number",children:"Find missing number"})}),"\n",(0,s.jsx)(e.h2,{id:"problem",children:"Problem"}),"\n",(0,s.jsx)(e.p,{children:"Given an integer array of size n containing distinct values in the range from 0 to n (inclusive), return the only number missing from the array within this range."}),"\n",(0,s.jsx)(e.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Input: nums = [0, 2, 3, 1, 4]\n\nOutput: 5\n\nExplanation: nums contains 0, 1, 2, 3, 4 thus leaving 5 as the only missing number in the range [0, 5]\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Input: nums = [0, 1, 2, 4, 5, 6]\n\nOutput: 3\n\nExplanation: nums contains 0, 1, 2, 4, 5, 6 thus leaving 3 as the only missing number in the range [0, 6]\n"})}),"\n",(0,s.jsx)(e.h2,{id:"solution",children:"Solution"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"class Solution {\n    public int missingNumber(int[] nums) {\n        int n = nums.length;\n        int arrSum = 0;\n        int sum = (n * (n + 1))/2;\n\n        for(int i :  nums) arrSum += i;\n\n        return sum - arrSum;\n    }\n}\n"})})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function o(n){const e=r.useContext(t);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);