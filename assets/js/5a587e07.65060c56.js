"use strict";(self.webpackChunkprep_up=self.webpackChunkprep_up||[]).push([[7249],{3198:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"JavaScript/OOP/ClassConstructorAndStatic","title":"Classes and Constructor","description":"1. ES6 class Implementation","source":"@site/docs/JavaScript/10_OOP/ClassConstructorAndStatic.md","sourceDirName":"JavaScript/10_OOP","slug":"/JavaScript/OOP/ClassConstructorAndStatic","permalink":"/knowledge-hub/docs/JavaScript/OOP/ClassConstructorAndStatic","draft":false,"unlisted":false,"editUrl":"https://priyanshujoshi99.github.io/knowledge-hub/docs/JavaScript/10_OOP/ClassConstructorAndStatic.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"call and this in JavaScript","permalink":"/knowledge-hub/docs/JavaScript/OOP/CallAndThis"},"next":{"title":"Understanding Getters & Setters in JavaScript","permalink":"/knowledge-hub/docs/JavaScript/OOP/GetterAndSetter"}}');var t=n(4848),c=n(8453);const i={},d="Classes and Constructor",o={},l=[{value:"<strong>1. ES6 <code>class</code> Implementation</strong>",id:"1-es6-class-implementation",level:2},{value:"<strong>How It Works</strong>",id:"how-it-works",level:3},{value:"<strong>2. Behind the Scenes: Prototype-Based Approach</strong>",id:"2-behind-the-scenes-prototype-based-approach",level:2},{value:"<strong>How It Works</strong>",id:"how-it-works-1",level:3},{value:"<strong>\ud83d\udccc Key Differences: Class vs. Prototype</strong>",id:"-key-differences-class-vs-prototype",level:2},{value:"<strong>\ud83d\udccc Trivia and Additional Notes</strong>",id:"-trivia-and-additional-notes",level:2},{value:"<strong>1. Understanding the <code>User</code> Class</strong>",id:"1-understanding-the-user-class",level:2},{value:"<strong>How It Works</strong>",id:"how-it-works-2",level:3},{value:"<strong>2. Instantiating <code>User</code></strong>",id:"2-instantiating-user",level:2},{value:"<strong>3. Understanding the <code>Teacher</code> Subclass</strong>",id:"3-understanding-the-teacher-subclass",level:2},{value:"<strong>How It Works</strong>",id:"how-it-works-3",level:3},{value:"<strong>4. Creating a <code>Teacher</code> Instance</strong>",id:"4-creating-a-teacher-instance",level:2},{value:"<strong>\ud83d\udccc Summary of Key Concepts</strong>",id:"-summary-of-key-concepts",level:2},{value:"<strong>\ud83d\udccc Trivia</strong>",id:"-trivia",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"classes-and-constructor",children:"Classes and Constructor"})}),"\n",(0,t.jsx)(s.h2,{id:"1-es6-class-implementation",children:(0,t.jsxs)(s.strong,{children:["1. ES6 ",(0,t.jsx)(s.code,{children:"class"})," Implementation"]})}),"\n",(0,t.jsx)(s.h3,{id:"how-it-works",children:(0,t.jsx)(s.strong,{children:"How It Works"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Class Declaration (",(0,t.jsx)(s.code,{children:"User"}),")"]}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"constructor"})," initializes ",(0,t.jsx)(s.code,{children:"username"}),", ",(0,t.jsx)(s.code,{children:"email"}),", and ",(0,t.jsx)(s.code,{children:"password"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"encryptPassword()"})," appends ",(0,t.jsx)(s.code,{children:'"abc"'})," to the password."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"changeUsername()"})," converts ",(0,t.jsx)(s.code,{children:"username"})," to uppercase."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"class User {\n  constructor(username, email, password) {\n    this.username = username;\n    this.email = email;\n    this.password = password;\n  }\n\n  encryptPassword() {\n    return `${this.password}abc`;\n  }\n\n  changeUsername() {\n    return `${this.username.toUpperCase()}`;\n  }\n}\n\nconst chai = new User('chai', 'chai@gmail.com', '123');\n\nconsole.log(chai.encryptPassword()); // Output: \"123abc\"\nconsole.log(chai.changeUsername()); // Output: \"CHAI\"\n"})}),"\n",(0,t.jsx)(s.h2,{id:"2-behind-the-scenes-prototype-based-approach",children:(0,t.jsx)(s.strong,{children:"2. Behind the Scenes: Prototype-Based Approach"})}),"\n",(0,t.jsx)(s.h3,{id:"how-it-works-1",children:(0,t.jsx)(s.strong,{children:"How It Works"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Constructor Function (",(0,t.jsx)(s.code,{children:"User"}),")"]}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Similar to the class, it initializes properties inside the function."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Prototype Methods (",(0,t.jsx)(s.code,{children:"encryptPassword"}),", ",(0,t.jsx)(s.code,{children:"changeUsername"}),")"]}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["These methods are attached to ",(0,t.jsx)(s.code,{children:"User.prototype"}),", so they are shared across instances instead of being recreated for each object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"function User(username, email, password) {\n  this.username = username;\n  this.email = email;\n  this.password = password;\n}\n\nUser.prototype.encryptPassword = function () {\n  return `${this.password}abc`;\n};\n\nUser.prototype.changeUsername = function () {\n  return `${this.username.toUpperCase()}`;\n};\n\nconst tea = new User('tea', 'tea@gmail.com', '123');\n\nconsole.log(tea.encryptPassword()); // Output: \"123abc\"\nconsole.log(tea.changeUsername()); // Output: \"TEA\"\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-key-differences-class-vs-prototype",children:(0,t.jsx)(s.strong,{children:"\ud83d\udccc Key Differences: Class vs. Prototype"})}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Feature"}),(0,t.jsx)(s.th,{children:"ES6 Class"}),(0,t.jsx)(s.th,{children:"Prototype-Based Approach"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Syntax"})}),(0,t.jsxs)(s.td,{children:["Uses ",(0,t.jsx)(s.code,{children:"class"})," keyword"]}),(0,t.jsxs)(s.td,{children:["Uses constructor function + ",(0,t.jsx)(s.code,{children:"prototype"})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Method Storage"})}),(0,t.jsxs)(s.td,{children:["Methods are on ",(0,t.jsx)(s.code,{children:"prototype"})]}),(0,t.jsxs)(s.td,{children:["Explicitly defined on ",(0,t.jsx)(s.code,{children:"User.prototype"})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Instantiation"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"new User(...)"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"new User(...)"})," (same)"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Readability"})}),(0,t.jsx)(s.td,{children:"Cleaner, more structured"}),(0,t.jsx)(s.td,{children:"More verbose, traditional"})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-trivia-and-additional-notes",children:(0,t.jsx)(s.strong,{children:"\ud83d\udccc Trivia and Additional Notes"})}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Classes are syntactic sugar"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"The ES6 class is just a cleaner way to define objects; behind the scenes, JavaScript still uses prototypes."}),"\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"class"})," syntax improves readability without changing the behavior."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Prototype Methods Save Memory"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Instead of creating methods inside the constructor (which would duplicate them for each instance), prototype methods allow all instances to share the same function reference."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsxs)(s.strong,{children:["Difference in ",(0,t.jsx)(s.code,{children:"this"})," Binding"]})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["In ",(0,t.jsx)(s.code,{children:"class"}),", methods are automatically bound to the instance when used with ",(0,t.jsx)(s.code,{children:"new"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["In prototype-based functions, methods need explicit ",(0,t.jsx)(s.code,{children:"this"})," references."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h1,{id:"static-in-javascript",children:[(0,t.jsx)(s.code,{children:"static"})," in JavaScript"]}),"\n",(0,t.jsx)(s.h2,{id:"1-understanding-the-user-class",children:(0,t.jsxs)(s.strong,{children:["1. Understanding the ",(0,t.jsx)(s.code,{children:"User"})," Class"]})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"class User {\n  constructor(username) {\n    this.username = username;\n  }\n\n  logMe() {\n    console.log(`Username: ${this.username}`);\n  }\n\n  static createId() {\n    return `123`;\n  }\n}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"how-it-works-2",children:(0,t.jsx)(s.strong,{children:"How It Works"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"constructor(username)"})}),": Initializes the ",(0,t.jsx)(s.code,{children:"username"})," property."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"logMe()"})}),": A regular instance method that logs the ",(0,t.jsx)(s.code,{children:"username"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"static createId()"})}),": A ",(0,t.jsx)(s.strong,{children:"static method"})," that belongs to the class itself, not instances."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"2-instantiating-user",children:(0,t.jsxs)(s.strong,{children:["2. Instantiating ",(0,t.jsx)(s.code,{children:"User"})]})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const john = new User('john');\n// console.log(john.createId()) \u274c ERROR\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Why does ",(0,t.jsx)(s.code,{children:"console.log(john.createId())"})," throw an error?"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"createId()"})," is a ",(0,t.jsx)(s.strong,{children:"static method"}),", meaning it's called on the ",(0,t.jsx)(s.strong,{children:"class itself"})," (",(0,t.jsx)(s.code,{children:"User.createId()"}),"), not on an instance (",(0,t.jsx)(s.code,{children:"john.createId()"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Correct usage:"})," ",(0,t.jsx)(s.code,{children:'console.log(User.createId()); // "123"'})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"3-understanding-the-teacher-subclass",children:(0,t.jsxs)(s.strong,{children:["3. Understanding the ",(0,t.jsx)(s.code,{children:"Teacher"})," Subclass"]})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"class Teacher extends User {\n  constructor(username, email) {\n    super(username);\n    this.email = email;\n  }\n}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"how-it-works-3",children:(0,t.jsx)(s.strong,{children:"How It Works"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"extends User"})}),": ",(0,t.jsx)(s.code,{children:"Teacher"})," inherits all non-static properties and methods of ",(0,t.jsx)(s.code,{children:"User"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"super(username)"})}),": Calls the ",(0,t.jsx)(s.code,{children:"User"})," constructor, ensuring ",(0,t.jsx)(s.code,{children:"this.username"})," is set properly before adding ",(0,t.jsx)(s.code,{children:"email"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Inheritance Chain:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Teacher"})," does ",(0,t.jsx)(s.strong,{children:"not"})," inherit ",(0,t.jsx)(s.code,{children:"User"}),"'s static methods (like ",(0,t.jsx)(s.code,{children:"createId()"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"4-creating-a-teacher-instance",children:(0,t.jsxs)(s.strong,{children:["4. Creating a ",(0,t.jsx)(s.code,{children:"Teacher"})," Instance"]})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const iphone = new Teacher('iphone', 'i@phone.com');\nconsole.log(iphone.createId()); \u274c ERROR\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Why does ",(0,t.jsx)(s.code,{children:"console.log(iphone.createId());"})," throw an error?"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"createId()"})," is a ",(0,t.jsx)(s.strong,{children:"static method"})," of ",(0,t.jsx)(s.code,{children:"User"}),", but static methods ",(0,t.jsx)(s.strong,{children:"do not get inherited"})," by child classes."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Correct usage:"})," ",(0,t.jsx)(s.code,{children:'console.log(User.createId()); // "123"'})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Fix:"})," If you want ",(0,t.jsx)(s.code,{children:"createId()"})," to be available in ",(0,t.jsx)(s.code,{children:"Teacher"}),", redefine it:","\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:'class Teacher extends User {\n  static createId() {\n    return super.createId(); // Calls the static method from User\n  }\n}\nconsole.log(Teacher.createId()); // "123"\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-summary-of-key-concepts",children:(0,t.jsx)(s.strong,{children:"\ud83d\udccc Summary of Key Concepts"})}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Feature"}),(0,t.jsx)(s.th,{children:"Explanation"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsxs)(s.strong,{children:["Static Method (",(0,t.jsx)(s.code,{children:"static createId()"}),")"]})}),(0,t.jsx)(s.td,{children:"Belongs to the class itself, not instances."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Calling Static Methods"})}),(0,t.jsxs)(s.td,{children:["Use ",(0,t.jsx)(s.code,{children:"ClassName.method()"}),", e.g., ",(0,t.jsx)(s.code,{children:"User.createId()"}),"."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsxs)(s.strong,{children:["Instance Methods (",(0,t.jsx)(s.code,{children:"logMe()"}),")"]})}),(0,t.jsxs)(s.td,{children:["Belong to instances, called as ",(0,t.jsx)(s.code,{children:"object.method()"}),"."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsxs)(s.strong,{children:["Inheritance (",(0,t.jsx)(s.code,{children:"extends User"}),")"]})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"Teacher"})," gets all non-static methods from ",(0,t.jsx)(s.code,{children:"User"}),"."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsxs)(s.strong,{children:["Calling Parent Constructor (",(0,t.jsx)(s.code,{children:"super(username)"}),")"]})}),(0,t.jsxs)(s.td,{children:["Ensures ",(0,t.jsx)(s.code,{children:"username"})," is set before adding ",(0,t.jsx)(s.code,{children:"email"}),"."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Static Methods Are Not Inherited"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"Teacher.createId()"})," does not exist unless explicitly redefined."]})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-trivia",children:(0,t.jsx)(s.strong,{children:"\ud83d\udccc Trivia"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Why are static methods useful?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Used for utility functions, like generating IDs, formatting data, etc., without needing an instance."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Can ",(0,t.jsx)(s.code,{children:"super"})," be used in static methods?"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Yes, ",(0,t.jsx)(s.code,{children:"super.createId()"})," works inside a static method of ",(0,t.jsx)(s.code,{children:"Teacher"})," because ",(0,t.jsx)(s.code,{children:"super"})," refers to the parent class."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var r=n(6540);const t={},c=r.createContext(t);function i(e){const s=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:s},e.children)}}}]);