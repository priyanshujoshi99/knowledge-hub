"use strict";(self.webpackChunkprep_up=self.webpackChunkprep_up||[]).push([[5518],{3178:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"DSA/Language Essentials/JavaBasics","title":"Java Basics","description":"1. Sample Code in Java","source":"@site/docs/DSA/1. Language Essentials/JavaBasics.md","sourceDirName":"DSA/1. Language Essentials","slug":"/DSA/Language Essentials/JavaBasics","permalink":"/knowledge-hub/docs/DSA/Language Essentials/JavaBasics","draft":false,"unlisted":false,"editUrl":"https://priyanshujoshi99.github.io/knowledge-hub/docs/DSA/1. Language Essentials/JavaBasics.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Data Structures and Algorithms","permalink":"/knowledge-hub/docs/category/data-structures-and-algorithms"},"next":{"title":"Java Collections","permalink":"/knowledge-hub/docs/DSA/Language Essentials/JavaCollections"}}');var l=s(4848),a=s(8453);const r={},t="Java Basics",c={},d=[{value:"1. Sample Code in Java",id:"1-sample-code-in-java",level:2},{value:"a. What is <code>main</code>",id:"a-what-is-main",level:3},{value:"b. What is <code>static</code>",id:"b-what-is-static",level:3},{value:"2. Comments",id:"2-comments",level:2},{value:"a. Single Line",id:"a-single-line",level:3},{value:"b. Multi-Line",id:"b-multi-line",level:3},{value:"3. Data Types",id:"3-data-types",level:2},{value:"a. <code>byte</code>",id:"a-byte",level:3},{value:"b. <code>short</code>",id:"b-short",level:3},{value:"c. <code>int</code>",id:"c-int",level:3},{value:"d. <code>float</code>",id:"d-float",level:3},{value:"e. <code>double</code>",id:"e-double",level:3},{value:"f. <code>char</code>",id:"f-char",level:3},{value:"4. Operators",id:"4-operators",level:2},{value:"a. Arithmetic",id:"a-arithmetic",level:3},{value:"b. Unary",id:"b-unary",level:3},{value:"c. Relational",id:"c-relational",level:3},{value:"d. Logical",id:"d-logical",level:3},{value:"e. Assignment",id:"e-assignment",level:3},{value:"f. Bitwise",id:"f-bitwise",level:3},{value:"g. Ternary",id:"g-ternary",level:3},{value:"5. String",id:"5-string",level:2},{value:"a. Strings and Immutability",id:"a-strings-and-immutability",level:3},{value:"b. Char Array to String",id:"b-char-array-to-string",level:3},{value:"c. String Methods",id:"c-string-methods",level:3},{value:"1. <strong>Concatenate</strong>:",id:"1-concatenate",level:4},{value:"2. <strong>Length</strong>:",id:"2-length",level:4},{value:"3. <strong>charAt</strong>:",id:"3-charat",level:4},{value:"4. <strong>Substring</strong>:",id:"4-substring",level:4},{value:"5. <strong>Equals</strong>:",id:"5-equals",level:4},{value:"6. Input/Output",id:"6-inputoutput",level:2},{value:"a. Scanner Class - Implementation",id:"a-scanner-class---implementation",level:3},{value:"b. Common Scanner Methods",id:"b-common-scanner-methods",level:3},{value:"1. <strong>nextInt()</strong>:",id:"1-nextint",level:4},{value:"2. <strong>nextDouble()</strong>:",id:"2-nextdouble",level:4},{value:"3. <strong>nextLine()</strong>:",id:"3-nextline",level:4},{value:"4. <strong>nextBoolean()</strong>:",id:"4-nextboolean",level:4},{value:"5. <strong>next()</strong>:",id:"5-next",level:4},{value:"c. BufferedReader",id:"c-bufferedreader",level:3},{value:"7. Type Casting",id:"7-type-casting",level:2},{value:"a. Implicit",id:"a-implicit",level:3},{value:"b. Explicit",id:"b-explicit",level:3},{value:"8. Constants",id:"8-constants",level:2},{value:"a. <code>final</code> Keyword",id:"a-final-keyword",level:3},{value:"9. Arrays",id:"9-arrays",level:2},{value:"a. Declaration and Access",id:"a-declaration-and-access",level:3},{value:"b. For Each Loop",id:"b-for-each-loop",level:3},{value:"c. 2D Array",id:"c-2d-array",level:3},{value:"10. Conditional Statements",id:"10-conditional-statements",level:2},{value:"a. If-Else",id:"a-if-else",level:3},{value:"b. Switch",id:"b-switch",level:3},{value:"11. Loops",id:"11-loops",level:2},{value:"a. For Loop",id:"a-for-loop",level:3},{value:"b. While Loop",id:"b-while-loop",level:3},{value:"12. Exception Handling",id:"12-exception-handling",level:2},{value:"Try-Catch",id:"try-catch",level:3}];function o(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"java-basics",children:"Java Basics"})}),"\n",(0,l.jsx)(e.h2,{id:"1-sample-code-in-java",children:"1. Sample Code in Java"}),"\n",(0,l.jsxs)(e.h3,{id:"a-what-is-main",children:["a. What is ",(0,l.jsx)(e.code,{children:"main"})]}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"main"})," method is the entry point of a Java application."]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Syntax"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"public static void main(String[] args) {\n    // Code to be executed\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Points"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"public"}),": Accessible from anywhere."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"static"}),": Belongs to the class, not an instance."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"void"}),": Returns nothing."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"String[] args"}),": Command-line arguments."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h3,{id:"b-what-is-static",children:["b. What is ",(0,l.jsx)(e.code,{children:"static"})]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Definition"}),": A keyword to denote a method or variable that belongs to the class rather than an instance."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'class Example {\n    static int count = 0; // Static variable\n\n    static void displayCount() { // Static method\n        System.out.println("Count: " + count);\n    }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"2-comments",children:"2. Comments"}),"\n",(0,l.jsx)(e.h3,{id:"a-single-line",children:"a. Single Line"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Syntax"}),": ",(0,l.jsx)(e.code,{children:"// This is a single-line comment"})]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"// This is a comment\nint x = 10; // Variable declaration\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"b-multi-line",children:"b. Multi-Line"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Syntax"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"/* This is a\n   multi-line comment */\n"})}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"/*\n   This code demonstrates\n   multi-line comments.\n*/\nint y = 20;\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"3-data-types",children:"3. Data Types"}),"\n",(0,l.jsxs)(e.h3,{id:"a-byte",children:["a. ",(0,l.jsx)(e.code,{children:"byte"})]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"1 byte (8 bits), range: -128 to 127."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"byte b = 100;\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h3,{id:"b-short",children:["b. ",(0,l.jsx)(e.code,{children:"short"})]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"2 bytes (16 bits), range: -32,768 to 32,767."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"short s = 32000;\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h3,{id:"c-int",children:["c. ",(0,l.jsx)(e.code,{children:"int"})]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"4 bytes (32 bits), range: -2^31 to 2^31-1."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int i = 123456;\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h3,{id:"d-float",children:["d. ",(0,l.jsx)(e.code,{children:"float"})]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"4 bytes (32 bits), precision: 6-7 decimal digits."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"float f = 3.14f;\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h3,{id:"e-double",children:["e. ",(0,l.jsx)(e.code,{children:"double"})]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"8 bytes (64 bits), precision: 15-16 decimal digits."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"double d = 3.14159;\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h3,{id:"f-char",children:["f. ",(0,l.jsx)(e.code,{children:"char"})]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"2 bytes (16 bits), stores a single Unicode character."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"char c = 'A';\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"4-operators",children:"4. Operators"}),"\n",(0,l.jsx)(e.h3,{id:"a-arithmetic",children:"a. Arithmetic"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int sum = 5 + 3; // Addition\nint diff = 5 - 3; // Subtraction\nint prod = 5 * 3; // Multiplication\nint quo = 5 / 3; // Division\nint rem = 5 % 3; // Modulus\n"})}),"\n",(0,l.jsx)(e.h3,{id:"b-unary",children:"b. Unary"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int x = 5;\nSystem.out.println(++x); // Pre-increment\nSystem.out.println(x--); // Post-decrement\n"})}),"\n",(0,l.jsx)(e.h3,{id:"c-relational",children:"c. Relational"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int a = 10, b = 20;\nSystem.out.println(a > b); // false\n"})}),"\n",(0,l.jsx)(e.h3,{id:"d-logical",children:"d. Logical"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"boolean res = (a > b) && (b > 0); // AND\n"})}),"\n",(0,l.jsx)(e.h3,{id:"e-assignment",children:"e. Assignment"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int num = 5;\nnum += 10; // Equivalent to num = num + 10\n"})}),"\n",(0,l.jsx)(e.h3,{id:"f-bitwise",children:"f. Bitwise"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int result = 5 & 3; // Bitwise AND\n"})}),"\n",(0,l.jsx)(e.h3,{id:"g-ternary",children:"g. Ternary"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'String result = (a > b) ? "Greater" : "Smaller";\n'})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"5-string",children:"5. String"}),"\n",(0,l.jsx)(e.h3,{id:"a-strings-and-immutability",children:"a. Strings and Immutability"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Strings in Java"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["A ",(0,l.jsx)(e.code,{children:"String"})," is a sequence of characters."]}),"\n",(0,l.jsxs)(e.li,{children:["Strings in Java are objects of the ",(0,l.jsx)(e.code,{children:"String"})," class."]}),"\n",(0,l.jsxs)(e.li,{children:["They are defined using double quotes:","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'String str = "Hello";\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Immutability"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Strings are ",(0,l.jsx)(e.strong,{children:"immutable"}),", meaning their content cannot be changed once created."]}),"\n",(0,l.jsxs)(e.li,{children:["Any operation that appears to modify a string (e.g., concatenation) creates a new ",(0,l.jsx)(e.code,{children:"String"})," object instead of modifying the existing one."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'String s1 = "Hello";\nString s2 = s1.concat(" World");\nSystem.out.println(s1); // Output: Hello\nSystem.out.println(s2); // Output: Hello World\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"b-char-array-to-string",children:"b. Char Array to String"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Strings can be constructed from character arrays."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"char[] chars = {'J', 'a', 'v', 'a'};\nString str = new String(chars);\nSystem.out.println(str); // Output: Java\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"c-string-methods",children:"c. String Methods"}),"\n",(0,l.jsxs)(e.h4,{id:"1-concatenate",children:["1. ",(0,l.jsx)(e.strong,{children:"Concatenate"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Combines two strings."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'String first = "Hello";\nString second = "World";\nString result = first + " " + second; // Using `+` operator\nSystem.out.println(result); // Output: Hello World\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h4,{id:"2-length",children:["2. ",(0,l.jsx)(e.strong,{children:"Length"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Returns the number of characters in a string."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'String str = "Java";\nSystem.out.println(str.length()); // Output: 4\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h4,{id:"3-charat",children:["3. ",(0,l.jsx)(e.strong,{children:"charAt"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Returns the character at a specified index."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'String str = "Java";\nSystem.out.println(str.charAt(2)); // Output: v\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h4,{id:"4-substring",children:["4. ",(0,l.jsx)(e.strong,{children:"Substring"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Extracts a part of the string."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'String str = "Programming";\nSystem.out.println(str.substring(3, 8)); // Output: gramm\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h4,{id:"5-equals",children:["5. ",(0,l.jsx)(e.strong,{children:"Equals"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Compares two strings for equality."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'String str1 = "Java";\nString str2 = "java";\nSystem.out.println(str1.equals(str2)); // Output: false\nSystem.out.println(str1.equalsIgnoreCase(str2)); // Output: true\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"6-inputoutput",children:"6. Input/Output"}),"\n",(0,l.jsx)(e.h3,{id:"a-scanner-class---implementation",children:"a. Scanner Class - Implementation"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"Scanner"})," class in ",(0,l.jsx)(e.code,{children:"java.util"})," is used to take input from the user."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Key Methods"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"nextInt()"}),": Reads an integer."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"nextDouble()"}),": Reads a double."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"nextLine()"}),": Reads a full line (including spaces)."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"nextBoolean()"}),": Reads a boolean."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"next()"}),": Reads a single word (until a space is encountered)."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Example Implementation"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'import java.util.Scanner;\n\npublic class InputExample {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print("Enter an integer: ");\n        int num = scanner.nextInt();\n\n        System.out.print("Enter a double: ");\n        double decimal = scanner.nextDouble();\n\n        scanner.nextLine(); // Consume the leftover newline\n\n        System.out.print("Enter a string: ");\n        String text = scanner.nextLine();\n\n        System.out.println("Integer: " + num);\n        System.out.println("Double: " + decimal);\n        System.out.println("String: " + text);\n\n        scanner.close();\n    }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h3,{id:"b-common-scanner-methods",children:"b. Common Scanner Methods"}),"\n",(0,l.jsxs)(e.h4,{id:"1-nextint",children:["1. ",(0,l.jsx)(e.strong,{children:"nextInt()"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Reads an integer value."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int number = scanner.nextInt();\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h4,{id:"2-nextdouble",children:["2. ",(0,l.jsx)(e.strong,{children:"nextDouble()"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Reads a double value."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"double price = scanner.nextDouble();\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h4,{id:"3-nextline",children:["3. ",(0,l.jsx)(e.strong,{children:"nextLine()"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Reads the entire line (including spaces)."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"String sentence = scanner.nextLine();\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h4,{id:"4-nextboolean",children:["4. ",(0,l.jsx)(e.strong,{children:"nextBoolean()"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Reads a boolean value (",(0,l.jsx)(e.code,{children:"true"})," or ",(0,l.jsx)(e.code,{children:"false"}),")."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"boolean isActive = scanner.nextBoolean();\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.h4,{id:"5-next",children:["5. ",(0,l.jsx)(e.strong,{children:"next()"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Reads a single word until a space or newline is encountered."}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":","\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"String word = scanner.next();\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h3,{id:"c-bufferedreader",children:"c. BufferedReader"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:["Used for faster input than the ",(0,l.jsx)(e.code,{children:"Scanner"})," class."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"Requires handling exceptions."}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\n\npublic class BufferedReaderExample {\n    public static void main(String[] args) {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\n        try {\n            System.out.print("Enter a string: ");\n            String input = reader.readLine();\n\n            System.out.println("You entered: " + input);\n        } catch (IOException e) {\n            System.out.println("An error occurred: " + e.getMessage());\n        }\n    }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"7-type-casting",children:"7. Type Casting"}),"\n",(0,l.jsx)(e.h3,{id:"a-implicit",children:"a. Implicit"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int x = 10;\ndouble y = x; // Automatic conversion\n"})}),"\n",(0,l.jsx)(e.h3,{id:"b-explicit",children:"b. Explicit"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"double d = 10.5;\nint i = (int) d; // Manual conversion\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"8-constants",children:"8. Constants"}),"\n",(0,l.jsxs)(e.h3,{id:"a-final-keyword",children:["a. ",(0,l.jsx)(e.code,{children:"final"})," Keyword"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"final int MAX = 100;\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"9-arrays",children:"9. Arrays"}),"\n",(0,l.jsx)(e.h3,{id:"a-declaration-and-access",children:"a. Declaration and Access"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int[] arr = {1, 2, 3};\nSystem.out.println(arr[0]); // Access\n"})}),"\n",(0,l.jsx)(e.h3,{id:"b-for-each-loop",children:"b. For Each Loop"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"for (int num : arr) {\n    System.out.println(num);\n}\n"})}),"\n",(0,l.jsx)(e.h3,{id:"c-2d-array",children:"c. 2D Array"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int[][] matrix = {{1, 2}, {3, 4}};\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"10-conditional-statements",children:"10. Conditional Statements"}),"\n",(0,l.jsx)(e.h3,{id:"a-if-else",children:"a. If-Else"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'if (x > 0) {\n    System.out.println("Positive");\n} else {\n    System.out.println("Negative");\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"b-switch",children:"b. Switch"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'switch (day) {\n    case 1: System.out.println("Monday"); break;\n    default: System.out.println("Invalid");\n}\n'})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"11-loops",children:"11. Loops"}),"\n",(0,l.jsx)(e.h3,{id:"a-for-loop",children:"a. For Loop"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"for (int i = 0; i < 5; i++) {\n    System.out.println(i);\n}\n"})}),"\n",(0,l.jsx)(e.h3,{id:"b-while-loop",children:"b. While Loop"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:"int i = 0;\nwhile (i < 5) {\n    System.out.println(i++);\n}\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"12-exception-handling",children:"12. Exception Handling"}),"\n",(0,l.jsx)(e.h3,{id:"try-catch",children:"Try-Catch"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-java",children:'try {\n    int result = 10 / 0;\n} catch (ArithmeticException e) {\n    System.out.println("Cannot divide by zero");\n}\n'})})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(o,{...n})}):o(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>t});var i=s(6540);const l={},a=i.createContext(l);function r(n){const e=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:r(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);