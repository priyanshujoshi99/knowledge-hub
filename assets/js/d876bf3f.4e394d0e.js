"use strict";(self.webpackChunkprep_up=self.webpackChunkprep_up||[]).push([[8491],{7160:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"DSA/Arrays/FAQs - Medium/RotateMatrixBy90Degrees","title":"Rotate matrix by 90 degrees","description":"Problem","source":"@site/docs/DSA/4. Arrays/3. FAQs - Medium/RotateMatrixBy90Degrees.md","sourceDirName":"DSA/4. Arrays/3. FAQs - Medium","slug":"/DSA/Arrays/FAQs - Medium/RotateMatrixBy90Degrees","permalink":"/knowledge-hub/docs/DSA/Arrays/FAQs - Medium/RotateMatrixBy90Degrees","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DSA/4. Arrays/3. FAQs - Medium/RotateMatrixBy90Degrees.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Rearrange array elements by sign","permalink":"/knowledge-hub/docs/DSA/Arrays/FAQs - Medium/RearrangeArrayElementsBySign"},"next":{"title":"Introduction","permalink":"/knowledge-hub/docs/intro"}}');var i=r(4848),a=r(8453);const o={},s="Rotate matrix by 90 degrees",l={},d=[{value:"Problem",id:"problem",level:2},{value:"Examples",id:"examples",level:3},{value:"Solution",id:"solution",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"rotate-matrix-by-90-degrees",children:"Rotate matrix by 90 degrees"})}),"\n",(0,i.jsx)(t.h2,{id:"problem",children:"Problem"}),"\n",(0,i.jsx)(t.p,{children:"Given an N * N 2D integer matrix, rotate the matrix by 90 degrees clockwise."}),"\n",(0,i.jsx)(t.p,{children:"The rotation must be done in place, meaning the input 2D matrix must be modified directly."}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Input: matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\nOutput: matrix = [[7, 4, 1], [8, 5, 2], [9, 6, 3]]\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Input: matrix = [[0, 1, 1, 2], [2, 0, 3, 1], [4, 5, 0, 5], [5, 6, 7, 0]]\n\nOutput: matrix = [[5, 4, 2, 0], [6, 5, 0, 1], [7, 0, 3, 1], [0, 5, 1, 2]]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"class Solution {\n    public void rotateMatrix(int[][] matrix) {\n        int n = matrix.length;\n\n        // Step 1: Transpose the matrix (convert rows to columns)\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                // Swap matrix[i][j] and matrix[j][i]\n                int temp = matrix[i][j];\n                matrix[i][j] = matrix[j][i];\n                matrix[j][i] = temp;\n            }\n        }\n\n        // Step 2: Reverse each row to get the rotated matrix\n        for (int i = 0; i < n; i++) {\n            reverseRow(matrix[i]);\n        }\n    }\n\n    private void reverseRow(int[] row) {\n        int left = 0, right = row.length - 1;\n        while (left < right) {\n            int temp = row[left];\n            row[left] = row[right];\n            row[right] = temp;\n            left++;\n            right--;\n        }\n    }\n}\n"})})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>s});var n=r(6540);const i={},a=n.createContext(i);function o(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);